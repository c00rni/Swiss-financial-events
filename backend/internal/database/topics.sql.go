// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: topics.sql

package database

import (
	"context"
)

const addTopic = `-- name: AddTopic :one
INSERT INTO topics (id, name)
VALUES (?, ?)
RETURNING id, name
`

type AddTopicParams struct {
	ID   string
	Name string
}

func (q *Queries) AddTopic(ctx context.Context, arg AddTopicParams) (Topic, error) {
	row := q.db.QueryRowContext(ctx, addTopic, arg.ID, arg.Name)
	var i Topic
	err := row.Scan(&i.ID, &i.Name)
	return i, err
}

const getTopicByName = `-- name: GetTopicByName :one
SELECT id, name
FROM topics
WHERE name = ?
`

func (q *Queries) GetTopicByName(ctx context.Context, name string) (Topic, error) {
	row := q.db.QueryRowContext(ctx, getTopicByName, name)
	var i Topic
	err := row.Scan(&i.ID, &i.Name)
	return i, err
}
